abstract StreamJsonRpc.ExceptionSettings.CanDeserialize(System.Type! type) -> bool
override StreamJsonRpc.Protocol.JsonRpcWarning.ToString() -> string!
static readonly StreamJsonRpc.ExceptionSettings.TrustedData -> StreamJsonRpc.ExceptionSettings!
static readonly StreamJsonRpc.ExceptionSettings.UntrustedData -> StreamJsonRpc.ExceptionSettings!
StreamJsonRpc.ExceptionSettings
StreamJsonRpc.ExceptionSettings.ExceptionSettings(int recursionLimit) -> void
StreamJsonRpc.ExceptionSettings.RecursionLimit.get -> int
StreamJsonRpc.ExceptionSettings.RecursionLimit.init -> void
StreamJsonRpc.JsonMessageFormatter.ReadWarning(Newtonsoft.Json.Linq.JToken! json) -> StreamJsonRpc.Protocol.JsonRpcMessage!
StreamJsonRpc.JsonRpc.ExceptionOptions.get -> StreamJsonRpc.ExceptionSettings!
StreamJsonRpc.JsonRpc.ExceptionOptions.set -> void
StreamJsonRpc.JsonRpc.HandleIncomingNonStandardMessageAsync(StreamJsonRpc.Protocol.JsonRpcMessage! message) -> System.Threading.Tasks.Task!
StreamJsonRpc.JsonRpcIgnoreAttribute
StreamJsonRpc.JsonRpcIgnoreAttribute.JsonRpcIgnoreAttribute() -> void
StreamJsonRpc.JsonRpcMethodAttribute.ClientRequiresNamedArguments.get -> bool
StreamJsonRpc.JsonRpcMethodAttribute.ClientRequiresNamedArguments.set -> void
StreamJsonRpc.JsonRpcTargetOptions.ClientRequiresNamedArguments.get -> bool
StreamJsonRpc.JsonRpcTargetOptions.ClientRequiresNamedArguments.set -> void
StreamJsonRpc.Protocol.JsonRpcWarning
StreamJsonRpc.Protocol.JsonRpcWarning.DebuggerDisplay.get -> string!
StreamJsonRpc.Protocol.JsonRpcWarning.JsonRpcWarning() -> void
StreamJsonRpc.Protocol.JsonRpcWarning.RequestId.get -> StreamJsonRpc.RequestId
StreamJsonRpc.Protocol.JsonRpcWarning.RequestId.set -> void
StreamJsonRpc.Protocol.JsonRpcWarning.Warning.get -> StreamJsonRpc.Protocol.JsonRpcWarning.WarningDetail?
StreamJsonRpc.Protocol.JsonRpcWarning.Warning.set -> void
StreamJsonRpc.Protocol.JsonRpcWarning.WarningDetail
StreamJsonRpc.Protocol.JsonRpcWarning.WarningDetail.Code.get -> StreamJsonRpc.Protocol.JsonRpcErrorCode
StreamJsonRpc.Protocol.JsonRpcWarning.WarningDetail.Code.set -> void
StreamJsonRpc.Protocol.JsonRpcWarning.WarningDetail.Data.get -> object?
StreamJsonRpc.Protocol.JsonRpcWarning.WarningDetail.Data.set -> void
StreamJsonRpc.Protocol.JsonRpcWarning.WarningDetail.GetData<T>() -> T
StreamJsonRpc.Protocol.JsonRpcWarning.WarningDetail.Message.get -> object?
StreamJsonRpc.Protocol.JsonRpcWarning.WarningDetail.Message.set -> void
StreamJsonRpc.Protocol.JsonRpcWarning.WarningDetail.WarningDetail() -> void
StreamJsonRpc.Reflection.MessageFormatterProgressTracker.CreateProgress(StreamJsonRpc.JsonRpc! rpc, object! token, System.Type! valueType, bool clientRequiresNamedArguments) -> object!
StreamJsonRpc.Reflection.MessageFormatterProgressTracker.CreateProgress<T>(StreamJsonRpc.JsonRpc! rpc, object! token, bool clientRequiresNamedArguments) -> System.IProgress<T>!
StreamJsonRpc.RpcMarshalableAttribute
StreamJsonRpc.RpcMarshalableAttribute.RpcMarshalableAttribute() -> void
StreamJsonRpc.RpcMarshalableOptionalInterfaceAttribute
StreamJsonRpc.RpcMarshalableOptionalInterfaceAttribute.RpcMarshalableOptionalInterfaceAttribute(int optionalInterfaceCode, System.Type! optionalInterface) -> void
StreamJsonRpc.RpcMarshalableOptionalInterfaceAttribute.OptionalInterface.get -> System.Type!
StreamJsonRpc.RpcMarshalableOptionalInterfaceAttribute.OptionalInterfaceCode.get -> int
virtual StreamJsonRpc.JsonMessageFormatter.DeserializeNonStandard(Newtonsoft.Json.Linq.JToken! json) -> StreamJsonRpc.Protocol.JsonRpcMessage!
virtual StreamJsonRpc.JsonRpc.SendAsync(StreamJsonRpc.Protocol.JsonRpcMessage! message, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask
virtual StreamJsonRpc.Protocol.JsonRpcWarning.WarningDetail.GetData(System.Type! dataType) -> object?
virtual StreamJsonRpc.Protocol.JsonRpcWarning.WarningDetail.SetExpectedDataType(System.Type! dataType) -> void